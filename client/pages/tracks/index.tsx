
import Head from 'next/head'
import { useRouter } from 'next/router'
import Sidebar from '../../components/sidebar'
import Content from '../../components/content'
import Player from '../../components/Player'
import * as React from 'react';
import styles from '../../styles/Home.module.css'
import { ITrack } from '../../types/track'
import TrackList from '../../components/TrackList'
import { useTypedSelector } from '../../hooks/useTypedSelector'
import { NextThunkDispatch, wrapper } from '../../store'
import { fetchTracks } from '../../store/action-creators/track'
import {connect} from 'react-redux';
import axios from 'axios'
import MainLayout from '../../loayouts/MainLayout'
import { Stack, TextField } from '@mui/material'

const Index = () => {
  const router = useRouter()

  const {tracks, error} = useTypedSelector(state => state.track)
  console.log(tracks.length, 'tracks')
  if(error){
    return null;
  }

  return (
    
      <div className={styles.container}>

      <Head>
        <title>Music</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <Sidebar /> */}
      {/* <Content /> */}
      <div className={styles.content}>
        {/* TrackList */}
        
          
        <TrackList tracks={tracks}/>
        <div className={styles.playlists}>
          <div className={styles.title}>
            <h1 style={{marginBottom:"30px"}}>Playlists for you</h1>
          </div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
          <div className={styles.playlist_card}></div>
        </div>
      </div>
      </div>

  );
}


export const getServerSideProps = wrapper.getServerSideProps((store) => async () => {
  const dispatch = store.dispatch as NextThunkDispatch
    await dispatch(await fetchTracks())
});

export default Index

